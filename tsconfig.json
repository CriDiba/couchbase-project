{
  "compilerOptions": {
    /* Default build options */
    "target": "es2020",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "commonjs",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "allowJs": false                          /* Allow javascript files to be compiled. */,
    "declaration": true                       /* Generates corresponding '.d.ts' file. */,
    "declarationMap": false                   /* Generates a sourcemap for each corresponding '.d.ts' file. */,
    "sourceMap": true                         /* Generates corresponding '.map' file. */,
    "removeComments": true                    /* Do not emit comments to output. */,
    "noEmit": false                            /* Do not emit outputs. */,
    "moduleResolution": "node"                /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "esModuleInterop": true                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,

    /* Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    "noImplicitAny": true,                    /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                 /* Enable strict null checks. */
    "strictFunctionTypes": true,              /* Enable strict checking of function types. */
    "strictBindCallApply": true,              /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "strictPropertyInitialization": true,     /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": true,                   /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true,                     /* Parse in strict mode and emit "use strict" for each source file. */
    "noUnusedLocals": false,                  /* Report errors on unused locals. */
    "noUnusedParameters": true,              /* Report errors on unused parameters. */
    "noImplicitReturns": true,                /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,       /* Report errors for fallthrough cases in switch statement. */
    "noUncheckedIndexedAccess": false,        /* Include 'undefined' in index signature results */
    "useUnknownInCatchVariables": false,

    /* Advanced Options */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true,  /* Disallow inconsistently-cased references to the same file. */
    "outDir": "./lib",      /* Redirect output structure to the directory. */
    "rootDir": "./src",     /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "baseUrl": "./",        /* Base directory to resolve non-absolute module names. */
  },
  "exclude": ["lib*", "**/*.spec.ts", "test/**/*.ts"],
  "ts-node": {
    // required for mocha to work correctly
    "files": true
  }
}